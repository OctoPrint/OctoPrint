<div id="webcam_video_container" tabindex="0" data-bind="visible: webcamWebRTCEnabled() || webcamHlsEnabled(), css: { webcam_rotated: settings.webcam_rotate90(), webcam_unrotated: !settings.webcam_rotate90() }">
    <div class="video-controls btn-group action-buttons">
        <div class="btn btn-mini" data-bind="click: function(data, event) { $root.launchWebcamFullscreen() }"><i class="fas fa-expand"></i></div>
        <div class="btn btn-mini" data-bind="visible: document.pictureInPictureEnabled, click: function(data, event) {  $root.launchWebcamPictureInPicture() }"><i class="fas fa-images"></i></div>
        <div class="btn btn-mini" data-bind="click: function(data, event) { $root.toggleWebcamMute() }">
            <!-- ko if: webcamMuted() -->
            <i class="fas fa-volume-mute"></i>
            <!-- /ko -->
            <!-- ko ifnot: webcamMuted() -->
            <i class="fas fa-volume-up"></i>
            <!-- /ko -->
        </div>
    </div>
    <div data-bind="css: { webcam_rotated: settings.webcam_rotate90(), webcam_unrotated: !settings.webcam_rotate90() }">
        <div class="rotation_target">
            <div data-bind="css: { flipH: settings.webcam_flipH(), flipV: settings.webcam_flipV() }">
                <video id="webcam_webrtc" muted autoplay playsinline style="width: 100%" data-bind="visible: webcamWebRTCEnabled()"></video>
                <video id="webcam_hls" muted autoplay playsinline style="width: 100%" data-bind="visible: webcamHlsEnabled()"></video>
            </div>
        </div>
    </div>
</div>
<div id="webcam_container" tabindex="0" data-bind="event: { keydown: onKeyDown, mouseover: onMouseOver, mouseout: onMouseOut, focus: onFocus }, visible: webcamMjpgEnabled()">
    <div class="nowebcam" data-bind="visible: !webcamLoaded()">
        <div class="text webcam_loading" data-bind="visible: !webcamLoaded() && !webcamError()">
            <p><strong>{{ _('Webcam stream loading...') }}</strong></p>
        </div>
        <div class="text webcam_error" data-bind="visible: !webcamLoaded() && webcamError()">
            <p><strong>{{ _('Webcam stream not loaded') }}</strong></p>
            <p data-bind="visible: !loginState.isAdmin()"><small>{{ _('It might not be configured correctly or require authentication. To have this fixed, get in touch with an administrator of this OctoPrint instance.') }}</small></p>
            <p data-bind="visible: loginState.isAdmin"><small>{{ _('It might not be configured correctly or require authentication. You can change the URL of the stream under "Settings" > "Webcam & Timelapse" > "Webcam" > "Stream URL". If you don\'t have a webcam you can also just disable webcam support there.') }}</small></p>
            <p data-bind="visible: loginState.isUser"><small>{{ _('Currently configured stream URL') }}: <a target="_blank" rel="noreferrer" data-bind="attr: {href: settings.webcam_streamUrl}, text: settings.webcam_streamUrl"></a></small></p>
        </div>
    </div>
    <div id="webcam_rotator" data-bind="css: { webcam_rotated: settings.webcam_rotate90(), webcam_unrotated: !settings.webcam_rotate90() }">
        <div class="webcam_fixed_ratio" data-bind="css: webcamRatioClass">
            <div class="webcam_fixed_ratio_inner">
                <img id="webcam_image" data-bind="css: { flipH: settings.webcam_flipH(), flipV: settings.webcam_flipV() }, event: { load: onWebcamLoaded, error: onWebcamErrored }, visible: !webcamError()">
            </div>
        </div>
    </div>
    <div class="keycontrol_overlay" data-bind="visible: showKeycontrols">
        <div class="keycontrol_overlay_heading">{{ _("Keyboard controls active") }} <a href="#" data-bind="click: toggleKeycontrolHelp"><i class="fas" data-bind="css: { 'fa-chevron-down': !keycontrolHelpActive(), 'fa-chevron-up': keycontrolHelpActive() }"></i></a></div>
        <div data-bind="visible: keycontrolHelpActive">
            <div class="keycontrol_overlay_column">
                <kbd>&rarr;</kbd> / <kbd>&larr;</kbd>: {{ _("X Axis") }} +/-<br>
                <kbd>&uarr;</kbd> / <kbd>&darr;</kbd>: {{ _("Y Axis") }} +/-<br>
                <kbd>W</kbd>, <kbd>{{ _("Page&uarr;") }}</kbd> / <kbd>S</kbd>, <kbd>{{ _("Page&darr;") }}</kbd>: {{ _("Z Axis") }} +/-
            </div>
            <div class="keycontrol_overlay_column">
                <kbd>Home</kbd>: {{ _("Home X/Y") }}<br>
                <kbd>End</kbd>: {{ _("Home Z") }}<br>
                <kbd>1</kbd>, <kbd>2</kbd>, <kbd>3</kbd>, <kbd>4</kbd>: {{ _("Stepsize") }} 0.1, 1, 10, 100mm
            </div>
        </div>
    </div>
</div>
<div data-bind="visible: keycontrolPossible() && loginState.hasPermissionKo(access.permissions.WEBCAM)() && loginState.hasPermissionKo(access.permissions.CONTROL)()">
    <small class="muted">{{ _("Hint: If you move your mouse over the picture, you enter keyboard control mode.") }}</small>
</div>
